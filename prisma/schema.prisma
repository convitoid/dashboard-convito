generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id          Int           @id @default(autoincrement())
  client_id   String        @unique
  client_name String
  event_name  String
  event_date  DateTime
  event_type  String
  image       ClientImage[]
  guest       Guest[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt()
  createdBy   String
  updatedBy   String
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String
  updatedBy String
}

model LogTestMessage {
  id              Int               @id @default(autoincrement())
  clientId        String
  clientName      String
  phoneNumber     String
  eventName       String
  senderName      String
  invitationLink  String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  LogTestQuestion LogTestQuestion[]
}

model LogTestQuestion {
  id               Int            @id @default(autoincrement())
  question         String
  answer           String?
  type             String
  guest            LogTestMessage @relation(fields: [idLogTestMessage], references: [id])
  flag             String?
  position         Int?
  idLogTestMessage Int
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model ClientImage {
  id                Int      @id @default(autoincrement())
  clientId          Int
  Client            Client   @relation(fields: [clientId], references: [id])
  flag              String
  imageName         String
  imagePath         String
  imageOriginalPath String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Guest {
  id          Int           @id @default(autoincrement())
  guestId     String
  name        String
  scenario    String
  clientId    Int
  client      Client        @relation(fields: [clientId], references: [id])
  GuestDetail GuestDetail[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model GuestDetail {
  id         Int      @id @default(autoincrement())
  guestId    Int
  guest      Guest    @relation(fields: [guestId], references: [id])
  detail_key String
  detail_val String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Question {
  
}